services:
  dns1:
    container_name: dns1
    hostname: dns1.bdc.home
    image: ubuntu/bind9:latest
    environment:
      - BIND9_USER=root
      - TZ=Asia/Kolkata
    volumes:
      - ./bind9/config:/etc/bind:z
      - ./bind9/cache:/var/cache/bind:z
      - ./bind9/records:/var/lib/bind:z
    network_mode: host
    restart: unless-stopped

  registry:
    image: registry:2
    hostname: registry.bdc.home
    container_name: docker_registry
    network_mode: host
    environment:
      TZ: Asia/Kolkata
      REGISTRY_VALIDATION_DISABLED: 'true'
    # ports:
    #   - 5000:5000
    volumes:
      - ${LOCAL_DIR}docker/registry-data:/var/lib/registry:z
    restart: unless-stopped

  hdc:
    build:
      context: "../baseimage/"
      dockerfile: Dockerfile
      args:
        - JAVA_VER=${JAVA_VER}
        - PY_VER=${PY_VER}
        - DOCKER_USR=${DOCKER_USR}
        - DOCKER_PASS=${DOCKER_PASS}
        - DOCKER_DIR=${DOCKER_DIR}
        - AIRFLOW_VER=${AIRFLOW_VER}
        # - AIRFLOW_CLIENT_VER=${AIRFLOW_CLIENT_VER}
        - SPARK_VERSION=${SPARK_VERSION}
    image: hdc

  secon-hist:
    build:
      context: secon-hist
      dockerfile: ${HOST_DIR}/local-cont/secon-hist/Dockerfile
      args:
        - GIT_CONFIG_DIR=${GIT_CONFIG_DIR}
        - GIT_CONFIG_ADDRESS=${GIT_CONFIG_ADDRESS}
        - DOCKER_DIR=${DOCKER_DIR}
        - DOCKER_SECONDARY_NAMENODE_DIR=${SECONDARY_NAMENODE_DIR}
    user: root
    image: secon-hist
    container_name: secon-hist
    restart: unless-stopped
    hostname: secon-hist.bdc.home
    network_mode: host
    # sysctls:
    #   - net.ipv6.conf.all.disable_ipv6=0
    # ports:
    #   - 18080:18080
    #   - 9868:9868
    #   - 19888:19888
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - ${LOCAL_DIR}docker/${SECONDARY_NAMENODE_DIR}:${DOCKER_DIR}${SECONDARY_NAMENODE_DIR}
      # - ${DOCKER_DIR}logs/secondary:${DOCKER_DIR}logs/hadoop
      - ${DOCKER_DIR}hadoop:${DOCKER_DIR}hadoop:ro
      - ${DOCKER_DIR}spark:${DOCKER_DIR}spark:ro  

  spark:
    build:
      context: "../spark/"
      dockerfile: Dockerfile
      args:
        - AWS_SPARK=${AWS_SPARK}
        - COMMON_POOL_VER=${COMMON_POOL_VER}
        - ICEBERG_SPARK_VER=${ICEBERG_SPARK_VER}
        - ICEBERG_VER=${ICEBERG_VER}
        - KAFKA_CLIENT_VER=${KAFKA_CLIENT_VER}
        - NESSIE_SPARK_VER=${NESSIE_SPARK_VER}
        - NESSIE_VER=${NESSIE_VER}
        - SCALA_VERSION=${SCALA_VERSION}
        - SPARK_VERSION=${SPARK_VERSION}
        - SPARK_SQL_KAFKA_VER=${SPARK_SQL_KAFKA_VER}
    image: spark

  minio-mc:
    image: minio/mc:latest
    hostname: minio-mc.bdc.home
    container_name: minio-mc
    # restart: unless-stopped
    network_mode: host
    entrypoint: ["/bin/bash", "/init.sh"]
    volumes:
     - ./minio-mc/init.sh:/init.sh
    environment:
      - TZ=Asia/Kolkata

