# networks:
  # ph_bridge:
  #   driver: bridge
  #   ipam:
  #     config:
  #       - subnet: 192.168.100.0/24
  #         gateway: 192.168.100.1
  #         ip_range: 192.168.100.2/32

services:
  dns1:
    container_name: dns1
    hostname: dns1.bdc.home
    image: ubuntu/bind9:latest
    environment:
      - BIND9_USER=root
      - TZ=Asia/Kolkata
    volumes:
      - ./bind9/config:/etc/bind:z
      - ./bind9/cache:/var/cache/bind:z
      - ./bind9/records:/var/lib/bind:z
    network_mode: host
    restart: unless-stopped

  registry:
    image: registry:2
    hostname: registry.bdc.home
    container_name: docker_registry
    network_mode: host
    environment:
      REGISTRY_VALIDATION_DISABLED: 'true'
    # ports:
    #   - 5000:5000
    volumes:
      - ${LOCAL_DIR}docker/registry-data:/var/lib/registry:z
    restart: unless-stopped

  hdc:
    build:
      context: "../baseimage/"
      dockerfile: Dockerfile
      args:
        - JAVA_VER=${JAVA_VER}
        - PY_VER=${PY_VER}
        - DOCKER_USR=${DOCKER_USR}
        - DOCKER_PASS=${DOCKER_PASS}
        - DOCKER_DIR=${DOCKER_DIR}
        - AIRFLOW_VER=${AIRFLOW_VER}
        # - AIRFLOW_CLIENT_VER=${AIRFLOW_CLIENT_VER}
        - SPARK_VERSION=${SPARK_VERSION}
    image: hdc

  secon-hist:
    build:
      context: secon-hist
      dockerfile: ${HOST_DIR}/local-cont/secon-hist/Dockerfile
      args:
        - GIT_CONFIG_DIR=${GIT_CONFIG_DIR}
        - GIT_CONFIG_ADDRESS=${GIT_CONFIG_ADDRESS}
        - DOCKER_DIR=${DOCKER_DIR}
        - DOCKER_SECONDARY_NAMENODE_DIR=${SECONDARY_NAMENODE_DIR}
    user: root
    image: secon-hist
    container_name: secon-hist
    restart: unless-stopped
    hostname: secon-hist.bdc.home
    network_mode: host
    # sysctls:
    #   - net.ipv6.conf.all.disable_ipv6=0
    # ports:
    #   - 18080:18080
    #   - 9868:9868
    #   - 19888:19888
    volumes:
      - ${LOCAL_DIR}docker/${SECONDARY_NAMENODE_DIR}:${DOCKER_DIR}${SECONDARY_NAMENODE_DIR}
      # - ${DOCKER_DIR}logs/secondary:${DOCKER_DIR}logs/hadoop
      - ${DOCKER_DIR}hadoop:${DOCKER_DIR}hadoop:ro
      - ${DOCKER_DIR}spark:${DOCKER_DIR}spark:ro

  redis:
    image: redis:latest
    hostname: redis.bdc.home
    container_name: redis
    restart: unless-stopped
    network_mode: host
    # ports:
    #   - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
  
  hue:
    image: gethue/hue:latest
    hostname: hue.bdc.home
    container_name: hue
    restart: unless-stopped
    network_mode: host
    # ports:
    #   - 8888:8888
    volumes:
      - ./hue/hue.ini:/usr/share/hue/desktop/conf/z-hue.ini

  # pihole:
  #   image: pihole/pihole:latest
  #   hostname: pihole.bdc.home
  #   container_name: pihole
  #   restart: unless-stopped
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     - "80:80/tcp"
  #   networks:
  #     bdCluster:
  #       ipv4_address: 192.168.1.11
  #       priority: 1000
  #     ph_bridge:
  #       ipv4_address: 192.168.100.2
  #       priority: 900
  #   volumes:
  #     - ./pihole/pihole.toml:/etc/pihole/pihole.toml:z
  #   environment:
  #     TZ: "Asia/Kolkata"
  #     FTLCONF_webserver_api_password: "password123"
  #     FTLCONF_dns_dnssec: 'false'
  #     FTLCONF_dns_listeningMode: 'local'
  #     FTLCONF_dns_bogusPriv: 'true'
  #     FTLCONF_dns_domainNeeded: 'true'
  #     FTLCONF_dns_upstreams: 'unbound.bdc.home#5335'
  #     FTLCONF_debug_api: 'true'


  # unbound:
  #   container_name: unbound
  #   hostname: unbound.bdc.home
  #   image: "mvance/unbound:latest"
  #   ports:
  #     - "5335:53/tcp"
  #     - "5335:53/udp"
  #   networks:
  #     bdCluster:
  #       ipv4_address: 192.168.1.15
  #   volumes:
  #     - ./unbound:/opt/unbound/etc/unbound:z
  #   restart: unless-stopped
