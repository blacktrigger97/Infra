networks:
  bdCluster:
    name: bdCluster
    driver: ipvlan
    external: true
    driver_opts:
      parent: ${ETHERNET_NAME}
    ipam:
      config:
        - subnet: 192.168.1.0/24
          ip_range: 192.168.1.0/24
          gateway: 192.168.1.1

services:

  postgresql:
    image: postgres:${DB_VER}
    container_name: postgresql
    hostname: postgresql.bdc.home
    cpus: 1
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.21
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${DOCKER_PASS}
    ports:
      - 5432:5432
    volumes: 
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${LOCAL_DIR}docker/${PG_DB_DIR}:/var/lib/postgresql/data

  questdb:
    image: questdb/questdb
    container_name: questdb
    hostname: questdb.bdc.home
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.37
    ports:
      - 9000:9000
      - 9009:9009
      - 8812:8812
      - 9003:9003
    volumes:
      - ${LOCAL_DIR}${QS_DB_DIR}:/root/.questdb
    environment:
      - TZ=Asia/Kolkata
      - QDB_LOG_W_STDOUT_LEVEL=ERROR
      - QDB_LOG_W_FILE_LEVEL=ERROR
      - QDB_LOG_W_HTTP_MIN_LEVEL=ERROR
      - QDB_SHARED_WORKER_COUNT=8
      - QDB_PG_USER=${DOCKER_USR}
      - QDB_PG_PASSWORD=${DOCKER_PASS}
      - QDB_TELEMETRY_ENABLED=false
      - QDB_HTTP_ENABLED=true
      - QDB_HTTP_BIND_TO=0.0.0.0:9000
      - QDB_HTTP_SECURITY_READONLY=false
  
  redis:
    image: redis:latest
    hostname: redis.bdc.home
    container_name: redis
    restart: unless-stopped
    network_mode: host
    # ports:
    #   - 6379:6379
    environment:
      - TZ=Asia/Kolkata
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
  

  
  

  