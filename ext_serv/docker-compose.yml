networks:
  bdCluster:
    name: bdCluster
    driver: ipvlan
    external: true
    driver_opts:
      parent: ${ETHERNET_NAME}
    ipam:
      config:
        - subnet: 192.168.1.0/24
          ip_range: 192.168.1.0/24
          gateway: 192.168.1.1

services:

  nessie:
    image: ghcr.io/projectnessie/nessie:${NESSIE_VER}
    container_name: nessie
    hostname: nessie.bdc.home
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.31
    ports:
      - 19120:19120
    environment:
      - quarkus.datasource.db-kind=postgresql
      - quarkus.datasource.jdbc.max-size=16
      - quarkus.datasource.username=${DOCKER_USR}
      - quarkus.datasource.password=${DOCKER_PASS}
      - quarkus.debug.print-startup-times=true
      - quarkus.profile=prod
      - quarkus.datasource.driver='org.postgresql.Driver'
      - quarkus.http.port=19120
      - quarkus.http.host=nessie.bdc.home
      - quarkus.datasource.jdbc.url=jdbc:postgresql://postgresql.bdc.home:5432/nessie
      - quarkus.oidc.enabled="false"
      - nessie.version.store.type=JDBC
      - nessie.catalog.default-warehouse=warehouse
      - nessie.catalog.warehouses.warehouse.location=s3a://warehouse/nessie
      - nessie.catalog.service.s3.default-options.request-signing-enabled=false
      - nessie.catalog.service.s3.default-options.endpoint=${MINIO_ENDPOINT}
      - nessie.catalog.service.s3.default-options.path-style-access=true
      - nessie.catalog.service.s3.default-options.region=us-east-1
      - nessie.catalog.service.s3.default-options.access-key=urn:nessie-secret:quarkus:nessie.catalog.secrets.access-key
      - nessie.catalog.secrets.access-key.name=admin
      - nessie.catalog.secrets.access-key.secret=${DOCKER_PASS}
      - nessie.server.authentication.enabled=false

  hue-minio:
    image: gethue/hue:latest
    hostname: hue.bdc.home
    container_name: hue
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.32
    ports:
      - 8888:8888
    volumes:
      - ./hue/hue_minio.ini:/usr/share/hue/desktop/conf/z-hue.ini
      # - ./hue/core-site.xml:/usr/share/hue/desktop/conf/core-site.xml:z

  hue-hdfs:
    image: gethue/hue:latest
    hostname: hue.bdc.home
    container_name: hue
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.32
    ports:
      - 8888:8888
    volumes:
      - ./hue/hue_hdfs.ini:/usr/share/hue/desktop/conf/z-hue.ini

  jupyter:
    build:
      context: jupyter 
      dockerfile: ${HOST_DIR}/ext_serv/jupyter/Dockerfile
      args:
        - PY_VER=${PY_VER}
        - DOCKER_DIR=${DOCKER_DIR}
    user: root
    image: jupyter
    container_name: jupyter
    hostname: jupyter.bdc.home
    entrypoint: ["jupyter","notebook"]
    networks:
      bdCluster:
        ipv4_address: 192.168.1.201
    ports:
      - 8091:8091
    volumes:
      - ./jupyter/notebooks:/root/notebooks

  dns1:
    container_name: dns1
    hostname: dns1.bdc.home
    image: ubuntu/bind9:latest
    environment:
      - BIND9_USER=root
      - TZ=Asia/Kolkata
    volumes:
      - ./bind9/config:/etc/bind:z
      - ./bind9/cache:/var/cache/bind:z
      - ./bind9/records:/var/lib/bind:z
    network_mode: host
    restart: unless-stopped

  registry:
    image: registry:2
    hostname: registry.bdc.home
    container_name: docker_registry
    network_mode: host
    environment:
      TZ: Asia/Kolkata
      REGISTRY_VALIDATION_DISABLED: 'true'
    # ports:
    #   - 5000:5000
    volumes:
      - ${LOCAL_DIR}docker/registry-data:/var/lib/registry:z
    restart: unless-stopped

  hdc:
    build:
      context: "../baseimage/"
      dockerfile: Dockerfile
      args:
        - JAVA_VER=${JAVA_VER}
        - PY_VER=${PY_VER}
        - DOCKER_USR=${DOCKER_USR}
        - DOCKER_PASS=${DOCKER_PASS}
        - DOCKER_DIR=${DOCKER_DIR}
        - AIRFLOW_VER=${AIRFLOW_VER}
        - SPARK_VERSION=${SPARK_VERSION}
    image: hdc

  secon-hist:
    build:
      context: secon-hist
      dockerfile: ${HOST_DIR}/local-cont/secon-hist/Dockerfile
      args:
        - GIT_CONFIG_DIR=${GIT_CONFIG_DIR}
        - GIT_CONFIG_ADDRESS=${GIT_CONFIG_ADDRESS}
        - DOCKER_DIR=${DOCKER_DIR}
        - DOCKER_SECONDARY_NAMENODE_DIR=${SECONDARY_NAMENODE_DIR}
    user: root
    image: secon-hist
    container_name: secon-hist
    restart: unless-stopped
    hostname: secon-hist.bdc.home
    network_mode: host
    # sysctls:
    #   - net.ipv6.conf.all.disable_ipv6=0
    # ports:
    #   - 18080:18080
    #   - 9868:9868
    #   - 19888:19888
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - ${LOCAL_DIR}docker/${SECONDARY_NAMENODE_DIR}:${DOCKER_DIR}${SECONDARY_NAMENODE_DIR}
      # - ${DOCKER_DIR}logs/secondary:${DOCKER_DIR}logs/hadoop
      - ${DOCKER_DIR}hadoop:${DOCKER_DIR}hadoop:ro
      - ${DOCKER_DIR}spark:${DOCKER_DIR}spark:ro

  redis:
    image: redis:latest
    hostname: redis.bdc.home
    container_name: redis
    restart: unless-stopped
    network_mode: host
    # ports:
    #   - 6379:6379
    environment:
      - TZ=Asia/Kolkata
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50

  minio-mc:
    image: minio/mc:latest
    hostname: minio-mc.bdc.home
    container_name: minio-mc
    restart: unless-stopped
    network_mode: host
    entrypoint: ["/bin/bash", "/init.sh"]
    volumes:
     - ./minio-mc/init.sh:/init.sh
    environment:
      - TZ=Asia/Kolkata
  
  

  
  

  