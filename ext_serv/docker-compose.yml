version: '3.8'

networks:
  bdCluster:
    name: bdCluster
    driver: ipvlan
    external: true
    driver_opts:
      parent: ${ETHERNET_NAME}
    ipam:
      config:
        - subnet: 192.168.1.0/24
          ip_range: 192.168.1.0/24
          gateway: 192.168.1.1

services:

  postgresql:
    image: postgres:${DB_VER}
    container_name: postgresql
    hostname: postgresql.bdc.home
    cpus: 1
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.21
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${DOCKER_PASS}
    ports:
      - 5432:5432
    volumes: 
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${LOCAL_DIR}${PG_DB_DIR}:/var/lib/postgresql/data

  nessie:
    build:
      context: nessie
      dockerfile: ${HOST_DIR}/ext_serv/nessie/Dockerfile
      args:
        - DOCKER_USR=${DOCKER_USR}
        - DOCKER_PASS=${DOCKER_PASS}
        - NESSIE_VER=${NESSIE_VER}
    image: nessie
    container_name: nessie
    hostname: nessie.bdc.home
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.31
    ports:
      - 19120:19120
    depends_on:
      - postgresql 

  trino-co:
    image: "trinodb/trino:latest"
    hostname: trino-co.bdc.home
    container_name: trino-co
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.33
    ports:
      - "8080:8080"
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - ./trino/trino-co/etc:/etc/trino
      - ./trino/trino-co/catalog:/etc/trino/catalog
      #- /root/docker/hdc_data/trino/data:/data/trino
    depends_on:
      - nessie

  trino-wk1:
    image: "trinodb/trino:latest"
    hostname: trino-wk1.bdc.home
    container_name: trino-wk1
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.41
    ports:
      - "8081:8081"
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - ./trino/trino-wk/etc1:/etc/trino
      - ./trino/trino-wk/catalog:/etc/trino/catalog
      #- /root/docker/hdc_data/trino/data:/data/trino

  trino-wk2:
    image: "trinodb/trino:latest"
    hostname: trino-wk2.bdc.home
    container_name: trino-wk2
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.42
    ports:
      - "8081:8081"
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - ./trino/trino-wk/etc2:/etc/trino
      - ./trino/trino-wk/catalog:/etc/trino/catalog
      #- /root/docker/hdc_data/trino/data:/data/trino

  trino-wk3:
    image: "trinodb/trino:latest"
    hostname: trino-wk3.bdc.home
    container_name: trino-wk3
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.43
    ports:
      - "8081:8081"
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - ./trino/trino-wk/etc3:/etc/trino
      - ./trino/trino-wk/catalog:/etc/trino/catalog
      #- /root/docker/hdc_data/trino/data:/data/trino

  kafka-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-1.bdc.home
    container_name: kafka-1
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.51
    ports:
      - 9092:9092
      - 29092:29092
      - 29093:29093
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka-1.bdc.home:29092,CONTROLLER://kafka-1.bdc.home:29093,EXTERNAL://kafka-1.bdc.home:9092'
      KAFKA_ADVERTISED_LISTENERS: 'EXTERNAL://kafka-1.bdc.home:9092,INTERNAL://kafka-1.bdc.home:29092'
      KAFKA_ADVERTISED_HOST_NAME: 'kafka-1.bdc.home'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1.bdc.home:29093,2@kafka-2.bdc.home:29093,3@kafka-3.bdc.home:29093'
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 9
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_LOG_RETENTION_MS: 345600000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      KAFKA_CFG_RETENTION_BYTES: 524288000
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  kafka-2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-2.bdc.home
    container_name: kafka-2
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.52
    ports:
      - 9092:9092
      - 29092:29092
      - 29093:29093
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_NODE_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka-2.bdc.home:29092,CONTROLLER://kafka-2.bdc.home:29093,EXTERNAL://kafka-2.bdc.home:9092'
      KAFKA_ADVERTISED_LISTENERS: 'EXTERNAL://kafka-2.bdc.home:9092,INTERNAL://kafka-2.bdc.home:29092'
      KAFKA_ADVERTISED_HOST_NAME: 'kafka-2.bdc.home'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1.bdc.home:29093,2@kafka-2.bdc.home:29093,3@kafka-3.bdc.home:29093'
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 9
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_LOG_RETENTION_MS: 345600000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      KAFKA_CFG_RETENTION_BYTES: 524288000
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  kafka-3:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-3.bdc.home
    container_name: kafka-3
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.53
    ports:
      - 9092:9092
      - 29092:29092
      - 29093:29093
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_NODE_ID: 3
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka-3.bdc.home:29092,CONTROLLER://kafka-3.bdc.home:29093,EXTERNAL://kafka-3.bdc.home:9092'
      KAFKA_ADVERTISED_LISTENERS: 'EXTERNAL://kafka-3.bdc.home:9092,INTERNAL://kafka-3.bdc.home:29092'
      KAFKA_ADVERTISED_HOST_NAME: 'kafka-3.bdc.home'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1.bdc.home:29093,2@kafka-2.bdc.home:29093,3@kafka-3.bdc.home:29093'
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 9
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_LOG_RETENTION_MS: 345600000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      KAFKA_CFG_RETENTION_BYTES: 524288000
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'        

  kafka-sr:
    image: confluentinc/cp-schema-registry:latest
    hostname: kafka-sr.bdc.home
    container_name: kafka-sr
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.35
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: kafka-sr.bdc.home
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1.bdc.home:9092,PLAINTEXT://kafka-2.bdc.home:9092,PLAINTEXT://kafka-3.bdc.home:9092
      SCHEMA_REGISTRY_LISTENERS: http://kafka-sr.bdc.home:8081

  ksqldb:
    image: confluentinc/ksqldb-server:latest
    hostname: ksqldb.bdc.home
    container_name: ksqldb
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.36
    ports:
      - 8088:8088
    environment:
      KSQL_LISTENERS: http://ksqldb.bdc.home:8088
      KSQL_BOOTSTRAP_SERVERS: kafka-1.bdc.home:9092,kafka-2.bdc.home:9092,,kafka-3.bdc.home:9092
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://kafka-sr.bdc.home:8081
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
    depends_on:
      - kafka-sr

  kconcen:
    image: confluentinc/cp-enterprise-control-center:latest
    hostname: kconcen.bdc.home
    container_name: kconcen
    networks:
      bdCluster:
        ipv4_address: 192.168.1.37
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka-1.bdc.home:9092,kafka-2.bdc.home:9092,,kafka-3.bdc.home:9092
      # CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      # CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: http://ksqldb.bdc.home:8088
      # CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: http://ksqldb.bdc.home:8088
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://kafka-sr.bdc.home:8081
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    depends_on:
      - ksqldb

  kafka-rest:
    image: confluentinc/cp-kafka-rest:latest
    hostname: kafka-rest.bdc.home
    container_name: kafka-rest
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.39
    ports:
      - 8082:8082
    environment:
      KAFKA_REST_HOST_NAME: kafka-rest.bdc.home
      KAFKA_REST_LISTENERS: http://kafka-rest.bdc.home:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-sr.bdc.home:8081
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1.bdc.home:9092,PLAINTEXT://kafka-2.bdc.home:9092,,PLAINTEXT://kafka-3.bdc.home:9092
    depends_on:
      - kafka-3

  hue:
    image: gethue/hue:latest
    hostname: hue.bdc.home
    container_name: hue
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.32
    ports:
      - 8888:8888
    volumes:
      - ./hue/hue.ini:/usr/share/hue/desktop/conf/z-hue.ini

  redis:
    image: redis:latest
    hostname: redis.bdc.home
    container_name: redis
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.26
    ports:
      - "6379:6379"
  
  airflow:
    build:
      context: airflow
      dockerfile: ${HOST_DIR}/ext_serv/airflow/Dockerfile
      args:
        - PY_VER=${PY_VER}
        - DOCKER_USR=${DOCKER_USR}
        - DOCKER_PASS=${DOCKER_PASS}
        - DOCKER_DIR=${DOCKER_DIR}
        - AIRFLOW_VER=${AIRFLOW_VER}
        - GIT_CONFIG_DIR=${GIT_CONFIG_DIR}
        - GIT_CONFIG_ADDRESS=${GIT_CONFIG_ADDRESS}
        - GIT_AIRFLOW_ADDRESS=${GIT_AIRFLOW_ADDRESS}
        - SPARK_VERSION=${SPARK_VERSION}
    container_name: airflow
    hostname: airflow.bdc.home
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.34
    ports:
      - 8080:8080
      - 5555:5555

  marimo:
    build: 
      context: marimo
      dockerfile: ${HOST_DIR}/ext_serv/marimo/Dockerfile
    container_name: marimo
    hostname: marimo.bdc.home
    user: root
    networks:
      bdCluster:
        ipv4_address: 192.168.1.47
    ports:
      - 8091:8091
    restart: unless-stopped
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - /root/notebooks:/root/notebooks

  questdb:
    image: questdb/questdb
    container_name: questdb
    hostname: questdb.bdc.home
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.37
    ports:
      - 9000:9000
      - 9009:9009
      - 8812:8812
      - 9003:9003
    volumes:
      - ${LOCAL_DIR}${QS_DB_DIR}:/root/.questdb
    environment:
      - TZ=Asia/Kolkata
      - QDB_LOG_W_STDOUT_LEVEL=ERROR
      - QDB_LOG_W_FILE_LEVEL=ERROR
      - QDB_LOG_W_HTTP_MIN_LEVEL=ERROR
      - QDB_SHARED_WORKER_COUNT=8
      - QDB_PG_USER=${DOCKER_USR}
      - QDB_PG_PASSWORD=${DOCKER_PASS}
      - QDB_TELEMETRY_ENABLED=false
      - QDB_HTTP_ENABLED=true
      - QDB_HTTP_BIND_TO=0.0.0.0:9000
      - QDB_HTTP_SECURITY_READONLY=false
  
  #ksql:
  #  image: confluentinc/ksqldb-cli:latest
  #  hostname: ksql.bdc.home
  #  container_name: ksql
  #  restart: unless-stopped
  #  networks:
  #    bdCluster:
  #      ipv4_address: 192.168.1.67
  #  entrypoint: /bin/sh
  #  tty: true
  #  depends_on:
  #    - ksqldb-server
  

  
  

  