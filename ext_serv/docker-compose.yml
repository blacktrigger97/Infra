networks:
  bdCluster:
    name: bdCluster
    driver: ipvlan
    # external: true
    driver_opts:
      parent: ${ETHERNET_NAME}
    ipam:
      config:
        - subnet: 192.168.1.0/24
          ip_range: 192.168.1.0/24
          gateway: 192.168.1.1

services:

  postgresql:
    image: postgres:${DB_VER}
    container_name: postgresql
    hostname: postgresql.bdc.home
    cpus: 1
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.21
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${DOCKER_PASS}
    ports:
      - 5432:5432
    volumes: 
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${LOCAL_DIR}docker/${PG_DB_DIR}:/var/lib/postgresql/data

  nessie:
    # build:
    #   context: nessie
    #   dockerfile: ${HOST_DIR}/ext_serv/nessie/Dockerfile
    #   args:
    #     - DOCKER_USR=${DOCKER_USR}
    #     - DOCKER_PASS=${DOCKER_PASS}
    #     - NESSIE_VER=${NESSIE_VER}
    # image: bitnami/nessie:${NESSIE_VER}
    image: ghcr.io/projectnessie/nessie:${NESSIE_VER}
    container_name: nessie
    hostname: nessie.bdc.home
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.31
    ports:
      - 19120:19120
    environment:
      - quarkus.datasource.db-kind=postgresql
      - quarkus.datasource.jdbc.max-size=16
      - quarkus.datasource.username=${DOCKER_USR}
      - quarkus.datasource.password=${DOCKER_PASS}
      - quarkus.debug.print-startup-times=true
      - quarkus.profile=prod
      - quarkus.datasource.driver='org.postgresql.Driver'
      - quarkus.http.port=19120
      - quarkus.http.host=nessie.bdc.home
      - quarkus.datasource.jdbc.url=jdbc:postgresql://postgresql.bdc.home:5432/nessie
      - quarkus.oidc.enabled="false"
      - nessie.version.store.type=JDBC
      - nessie.catalog.default-warehouse=warehouse
      - nessie.catalog.warehouses.warehouse.location=s3a://warehouse/nessie
      - nessie.catalog.service.s3.default-options.request-signing-enabled=false
      - nessie.catalog.service.s3.default-options.endpoint=${MINIO_ENDPOINT}
      - nessie.catalog.service.s3.default-options.path-style-access=true
      - nessie.catalog.service.s3.default-options.region=us-east-1
      - nessie.catalog.service.s3.default-options.access-key=urn:nessie-secret:quarkus:nessie.catalog.secrets.access-key
      - nessie.catalog.secrets.access-key.name=admin
      - nessie.catalog.secrets.access-key.secret=password
      - nessie.server.authentication.enabled=false
    depends_on:
      - postgresql 

  hue-minio:
    image: gethue/hue:latest
    hostname: hue.bdc.home
    container_name: hue
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.32
    ports:
      - 8888:8888
    volumes:
      - ./hue/hue_minio.ini:/usr/share/hue/desktop/conf/z-hue.ini
      - ./hue/core-site.xml:/usr/share/hue/desktop/conf/core-site.xml

  marimo:
    build: 
      context: marimo
      dockerfile: ${HOST_DIR}/ext_serv/marimo/Dockerfile
    container_name: marimo
    hostname: marimo.bdc.home
    user: root
    networks:
      bdCluster:
        ipv4_address: 192.168.1.47
    ports:
      - 8091:8091
    restart: unless-stopped
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - /root/notebooks:/root/notebooks

  questdb:
    image: questdb/questdb
    container_name: questdb
    hostname: questdb.bdc.home
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.37
    ports:
      - 9000:9000
      - 9009:9009
      - 8812:8812
      - 9003:9003
    volumes:
      - ${LOCAL_DIR}${QS_DB_DIR}:/root/.questdb
    environment:
      - TZ=Asia/Kolkata
      - QDB_LOG_W_STDOUT_LEVEL=ERROR
      - QDB_LOG_W_FILE_LEVEL=ERROR
      - QDB_LOG_W_HTTP_MIN_LEVEL=ERROR
      - QDB_SHARED_WORKER_COUNT=8
      - QDB_PG_USER=${DOCKER_USR}
      - QDB_PG_PASSWORD=${DOCKER_PASS}
      - QDB_TELEMETRY_ENABLED=false
      - QDB_HTTP_ENABLED=true
      - QDB_HTTP_BIND_TO=0.0.0.0:9000
      - QDB_HTTP_SECURITY_READONLY=false
  
  
  

  
  

  