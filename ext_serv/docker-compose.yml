version: '3.8'

networks:
  bdCluster:
    name: bdCluster
    driver: ipvlan
    external: true
    driver_opts:
      parent: ${ETHERNET_NAME}
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1

services:

  postgresql:
    image: postgres:${DB_VER}
    container_name: postgresql
    hostname: postgresql.bdc.home
    cpus: 1
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.43
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${DOCKER_PASS}
    ports:
      - 5432:5432
    volumes: 
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${LOCAL_DIR}${DB_DIR}:/var/lib/postgresql/data

  nessie:
    build:
      context: nessie
      dockerfile: ${HOST_DIR}/ext_serv/nessie/Dockerfile
      args:
        - DOCKER_USR=${DOCKER_USR}
        - DOCKER_PASS=${DOCKER_PASS}
        - NESSIE_VER=${NESSIE_VER}
    image: nessie
    container_name: nessie
    hostname: nessie.bdc.home
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.44
    ports:
      - 19120:19120
    depends_on:
      - postgresql 

  trino-co:
    image: "trinodb/trino:448"
    hostname: trino-co.bdc.home
    container_name: trino-co
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.30
    ports:
      - "8080:8080"
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - ./trino/trino-co/etc:/etc/trino
      - ./trino/trino-co/catalog:/etc/trino/catalog
      - /root/docker/hdc_data/trino/data:/data/trino
    depends_on:
      - nessie

  trino-wk1:
    image: "trinodb/trino:448"
    hostname: trino-wk1.bdc.home
    container_name: trino-wk1
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.31
    ports:
      - "8081:8081"
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - ./trino/trino-wk/etc:/etc/trino
      - ./trino/trino-wk/catalog:/etc/trino/catalog
      - /root/docker/hdc_data/trino/data:/data/trino

  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888
    hostname: zookeeper-1.bdc.home
    container_name: zookeeper-1
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.60
    ports:
      - 2181:2181

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888
    hostname: zookeeper-2.bdc.home
    container_name: zookeeper-2
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.61
    ports:
      - 2181:2181
  
  kafka-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-1.bdc.home
    container_name: kafka-1
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.70
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1.bdc.home:2181,zookeeper-2.bdc.home:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1.bdc.home:19092,EXTERNAL_SAME_HOST://kafka-1.bdc.home:9092,EXTERNAL_DIFFERENT_HOST://kafka-1.bdc.home:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT,EXTERNAL_DIFFERENT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    depends_on:
      - zookeeper-1

  kafka-2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-2.bdc.home
    container_name: kafka-2
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.71
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1.bdc.home:2181,zookeeper-2.bdc.home:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2.bdc.home:19092,EXTERNAL_SAME_HOST://kafka-2.bdc.home:9092,EXTERNAL_DIFFERENT_HOST://kafka-2.bdc.home:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT,EXTERNAL_DIFFERENT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    depends_on:
      - zookeeper-2

  kafka-sr:
    image: confluentinc/cp-schema-registry:latest
    hostname: kafka-sr.bdc.home
    container_name: kafka-sr
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.65
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: kafka-sr.bdc.home
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1.bdc.home:19092,PLAINTEXT://kafka-2.bdc.home:29092
      SCHEMA_REGISTRY_LISTENERS: http://kafka-sr.bdc.home:8081
    depends_on:
      - kafka-1

  ksqldb:
    image: confluentinc/ksqldb-server:latest
    hostname: ksqldb.bdc.home
    container_name: ksqldb
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.66
    ports:
      - 8088:8088
    environment:
      KSQL_LISTENERS: http://ksqldb.bdc.home:8088
      KSQL_BOOTSTRAP_SERVERS: kafka-1.bdc.home:29092,kafka-2.bdc.home:9092
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://kafka-sr.bdc.home:8081
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
    depends_on:
      - kafka-sr
  
  #ksql:
  #  image: confluentinc/ksqldb-cli:latest
  #  hostname: ksql.bdc.home
  #  container_name: ksql
  #  restart: unless-stopped
  #  networks:
  #    bdCluster:
  #      ipv4_address: 192.168.1.67
  #  entrypoint: /bin/sh
  #  tty: true
  #  depends_on:
  #    - ksqldb-server
  
  #kafka-rest:
  #  image: confluentinc/cp-kafka-rest:latest
  #  hostname: kafka-rest.bdc.home
  #  container_name: kafka-rest
  #  restart: unless-stopped
  #  networks:
  #    bdCluster:
  #      ipv4_address: 192.168.1.66
  #  ports:
  #    - 8082:8082
  #  environment:
  #    KAFKA_REST_HOST_NAME: kafka-rest.bdc.home
  #    KAFKA_REST_LISTENERS: http://kafka-rest.bdc.home:8082
  #    KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-sr.bdc.home:8081
  #    KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1.bdc.home:29092,PLAINTEXT://kafka-2.bdc.home:9092
  #  depends_on:
  #    - zookeeper-2
  #    - kafka-2

  hue:
    image: gethue/hue:latest
    hostname: hue.bdc.home
    container_name: hue
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.46
    ports:
      - 8888:8888
    volumes:
      - ./hue/hue.ini:/usr/share/hue/desktop/conf/z-hue.ini
  redis:
    image: redis:latest
    hostname: redis.bdc.home
    container_name: airflow-redis
    restart: unless-stopped
    networks:
      bdCluster:
        ipv4_address: 192.168.1.47
    ports:
      - "5672:5672"
  

  